
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE SCHEMA IF NOT EXISTS "public";

ALTER SCHEMA "public" OWNER TO "pg_database_owner";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."creator_chat_messages" (
    "id" bigint NOT NULL,
    "creator_address" text NOT NULL,
    "author" uuid DEFAULT auth.uid(),
    "message" text,
    "translated" jsonb,
    "rich" jsonb,
    "created_at" timestamp with time zone DEFAULT now() NOT NULL
);

ALTER TABLE "public"."creator_chat_messages" OWNER TO "postgres";

ALTER TABLE "public"."creator_chat_messages" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."creator_chat_messages_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."creator_key_activities" (
    "block_number" bigint NOT NULL,
    "log_index" bigint NOT NULL,
    "tx" text NOT NULL,
    "wallet_address" text NOT NULL,
    "creator_address" text NOT NULL,
    "activity_name" text NOT NULL,
    "args" text[],
    "created_at" timestamp with time zone DEFAULT now() NOT NULL
);

ALTER TABLE "public"."creator_key_activities" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."creator_key_events" (
    "block_number" bigint NOT NULL,
    "log_index" bigint NOT NULL,
    "event_type" smallint NOT NULL,
    "args" text[] DEFAULT '{}'::text[] NOT NULL,
    "wallet_address" text NOT NULL,
    "creator_address" text NOT NULL,
    "created_at" timestamp with time zone DEFAULT now() NOT NULL
);

ALTER TABLE "public"."creator_key_events" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."creator_key_holders" (
    "creator_address" text NOT NULL,
    "wallet_address" text NOT NULL,
    "last_fetched_balance" numeric DEFAULT '0'::numeric NOT NULL,
    "created_at" timestamp with time zone DEFAULT now() NOT NULL,
    "updated_at" timestamp with time zone
);

ALTER TABLE "public"."creator_key_holders" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."creator_keys" (
    "creator_address" text NOT NULL,
    "supply" numeric DEFAULT '0'::numeric NOT NULL,
    "last_fetched_price" numeric DEFAULT '1000000000000000000'::numeric NOT NULL,
    "total_trading_volume" numeric DEFAULT '0'::numeric NOT NULL,
    "is_price_up" boolean,
    "last_message" text,
    "last_message_sent_at" timestamp with time zone DEFAULT '-infinity'::timestamp with time zone NOT NULL,
    "holder_count" integer DEFAULT 1 NOT NULL,
    "last_purchased_at" timestamp with time zone DEFAULT '-infinity'::timestamp with time zone NOT NULL,
    "created_at" timestamp with time zone DEFAULT now() NOT NULL,
    "updated_at" timestamp with time zone
);

ALTER TABLE "public"."creator_keys" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."group_chat_messages" (
    "id" bigint NOT NULL,
    "group_id" text NOT NULL,
    "author" uuid DEFAULT auth.uid(),
    "message" text,
    "translated" jsonb,
    "rich" jsonb,
    "created_at" timestamp with time zone DEFAULT now() NOT NULL
);

ALTER TABLE "public"."group_chat_messages" OWNER TO "postgres";

ALTER TABLE "public"."group_chat_messages" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."group_chat_messages_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."group_key_activities" (
    "block_number" bigint NOT NULL,
    "log_index" bigint NOT NULL,
    "tx" text NOT NULL,
    "wallet_address" text NOT NULL,
    "group_id" text NOT NULL,
    "activity_name" text NOT NULL,
    "args" text[],
    "created_at" timestamp with time zone DEFAULT now() NOT NULL
);

ALTER TABLE "public"."group_key_activities" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."group_key_events" (
    "block_number" bigint NOT NULL,
    "log_index" bigint NOT NULL,
    "event_type" smallint NOT NULL,
    "args" text[] DEFAULT '{}'::text[] NOT NULL,
    "wallet_address" text NOT NULL,
    "group_id" text NOT NULL,
    "created_at" timestamp with time zone DEFAULT now() NOT NULL
);

ALTER TABLE "public"."group_key_events" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."group_key_holders" (
    "group_id" text NOT NULL,
    "wallet_address" text NOT NULL,
    "last_fetched_balance" numeric DEFAULT '0'::numeric NOT NULL,
    "created_at" timestamp with time zone DEFAULT now() NOT NULL,
    "updated_at" timestamp with time zone
);

ALTER TABLE "public"."group_key_holders" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."group_keys" (
    "group_id" text NOT NULL,
    "owner" text NOT NULL,
    "name" text NOT NULL,
    "image" text,
    "image_thumb" text,
    "image_stored" boolean DEFAULT false NOT NULL,
    "stored_image" text,
    "stored_image_thumb" text,
    "metadata" jsonb,
    "supply" numeric DEFAULT '0'::numeric NOT NULL,
    "last_fetched_price" numeric DEFAULT '1000000000000000000'::numeric NOT NULL,
    "total_trading_volume" numeric DEFAULT '0'::numeric NOT NULL,
    "is_price_up" boolean,
    "last_message" text,
    "last_message_sent_at" timestamp with time zone DEFAULT '-infinity'::timestamp with time zone NOT NULL,
    "holder_count" integer DEFAULT 1 NOT NULL,
    "last_purchased_at" timestamp with time zone DEFAULT '-infinity'::timestamp with time zone NOT NULL,
    "created_at" timestamp with time zone DEFAULT now() NOT NULL,
    "updated_at" timestamp with time zone
);

ALTER TABLE "public"."group_keys" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."notifications" (
    "id" bigint NOT NULL,
    "user_id" uuid NOT NULL,
    "triggerer" uuid,
    "type" smallint NOT NULL,
    "key_type" smallint,
    "reference_key" text,
    "amount" bigint,
    "read" boolean DEFAULT false NOT NULL,
    "read_at" timestamp with time zone,
    "created_at" timestamp with time zone DEFAULT now() NOT NULL
);

ALTER TABLE "public"."notifications" OWNER TO "postgres";

ALTER TABLE "public"."notifications" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."notifications_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."topic_chat_messages" (
    "id" bigint NOT NULL,
    "source" text NOT NULL,
    "topic" text NOT NULL,
    "author" uuid DEFAULT auth.uid(),
    "external_author_id" text,
    "external_author_name" text,
    "external_author_avatar" text,
    "message" text,
    "external_message_id" text,
    "translated" jsonb,
    "rich" jsonb,
    "created_at" timestamp with time zone DEFAULT now() NOT NULL
);

ALTER TABLE "public"."topic_chat_messages" OWNER TO "postgres";

ALTER TABLE "public"."topic_chat_messages" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."topic_chat_messages_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."topic_key_activities" (
    "block_number" bigint NOT NULL,
    "log_index" bigint NOT NULL,
    "tx" text NOT NULL,
    "wallet_address" text NOT NULL,
    "topic" text NOT NULL,
    "activity_name" text NOT NULL,
    "args" text[],
    "created_at" timestamp with time zone DEFAULT now() NOT NULL
);

ALTER TABLE "public"."topic_key_activities" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."topic_key_events" (
    "block_number" bigint NOT NULL,
    "log_index" bigint NOT NULL,
    "event_type" smallint NOT NULL,
    "args" text[] DEFAULT '{}'::text[] NOT NULL,
    "wallet_address" text NOT NULL,
    "topic" text NOT NULL,
    "created_at" timestamp with time zone DEFAULT now() NOT NULL
);

ALTER TABLE "public"."topic_key_events" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."topic_key_holders" (
    "topic" text NOT NULL,
    "wallet_address" text NOT NULL,
    "last_fetched_balance" numeric DEFAULT '0'::numeric NOT NULL,
    "created_at" timestamp with time zone DEFAULT now() NOT NULL,
    "updated_at" timestamp with time zone
);

ALTER TABLE "public"."topic_key_holders" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."topic_keys" (
    "topic" text NOT NULL,
    "image" text,
    "image_thumb" text,
    "metadata" jsonb,
    "supply" numeric DEFAULT '0'::numeric NOT NULL,
    "last_fetched_price" numeric DEFAULT '1000000000000000000'::numeric NOT NULL,
    "total_trading_volume" numeric DEFAULT '0'::numeric NOT NULL,
    "is_price_up" boolean,
    "last_message" text,
    "last_message_sent_at" timestamp with time zone DEFAULT '-infinity'::timestamp with time zone NOT NULL,
    "holder_count" integer DEFAULT 1 NOT NULL,
    "last_purchased_at" timestamp with time zone DEFAULT '-infinity'::timestamp with time zone NOT NULL,
    "created_at" timestamp with time zone DEFAULT now() NOT NULL,
    "updated_at" timestamp with time zone
);

ALTER TABLE "public"."topic_keys" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."tracked_event_blocks" (
    "contract_type" smallint NOT NULL,
    "block_number" bigint NOT NULL,
    "updated_at" timestamp with time zone DEFAULT now() NOT NULL
);

ALTER TABLE "public"."tracked_event_blocks" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."user_wallets" (
    "wallet_address" text NOT NULL,
    "total_key_balance" numeric DEFAULT '0'::numeric NOT NULL,
    "total_earned_trading_fees" numeric DEFAULT '0'::numeric NOT NULL,
    "created_at" timestamp with time zone DEFAULT now() NOT NULL,
    "updated_at" timestamp with time zone
);

ALTER TABLE "public"."user_wallets" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."users_public" (
    "user_id" uuid DEFAULT auth.uid() NOT NULL,
    "wallet_address" text,
    "total_earned_trading_fees" numeric DEFAULT '0'::numeric NOT NULL,
    "display_name" text,
    "avatar" text,
    "avatar_thumb" text,
    "avatar_stored" boolean DEFAULT false NOT NULL,
    "stored_avatar" text,
    "stored_avatar_thumb" text,
    "x_username" text,
    "metadata" jsonb,
    "follower_count" integer DEFAULT 0 NOT NULL,
    "following_count" integer DEFAULT 0 NOT NULL,
    "blocked" boolean DEFAULT false NOT NULL,
    "created_at" timestamp with time zone DEFAULT now() NOT NULL,
    "updated_at" timestamp with time zone
);

ALTER TABLE "public"."users_public" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."wallet_linking_nonces" (
    "user_id" uuid DEFAULT auth.uid() NOT NULL,
    "wallet_address" text NOT NULL,
    "nonce" uuid DEFAULT gen_random_uuid() NOT NULL,
    "created_at" timestamp with time zone DEFAULT now() NOT NULL
);

ALTER TABLE "public"."wallet_linking_nonces" OWNER TO "postgres";

ALTER TABLE ONLY "public"."creator_chat_messages"
    ADD CONSTRAINT "creator_chat_messages_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."creator_key_activities"
    ADD CONSTRAINT "creator_key_activities_pkey" PRIMARY KEY ("block_number", "log_index");

ALTER TABLE ONLY "public"."creator_key_events"
    ADD CONSTRAINT "creator_key_events_pkey" PRIMARY KEY ("block_number", "log_index");

ALTER TABLE ONLY "public"."creator_key_holders"
    ADD CONSTRAINT "creator_key_holders_pkey" PRIMARY KEY ("creator_address", "wallet_address");

ALTER TABLE ONLY "public"."creator_keys"
    ADD CONSTRAINT "creator_keys_pkey" PRIMARY KEY ("creator_address");

ALTER TABLE ONLY "public"."group_chat_messages"
    ADD CONSTRAINT "group_chat_messages_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."group_key_activities"
    ADD CONSTRAINT "group_key_activities_pkey" PRIMARY KEY ("block_number", "log_index");

ALTER TABLE ONLY "public"."group_key_events"
    ADD CONSTRAINT "group_key_events_pkey" PRIMARY KEY ("block_number", "log_index");

ALTER TABLE ONLY "public"."group_key_holders"
    ADD CONSTRAINT "group_key_holders_pkey" PRIMARY KEY ("group_id", "wallet_address");

ALTER TABLE ONLY "public"."group_keys"
    ADD CONSTRAINT "group_keys_pkey" PRIMARY KEY ("group_id");

ALTER TABLE ONLY "public"."notifications"
    ADD CONSTRAINT "notifications_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."topic_chat_messages"
    ADD CONSTRAINT "topic_chat_messages_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."topic_key_activities"
    ADD CONSTRAINT "topic_key_activities_pkey" PRIMARY KEY ("block_number", "log_index");

ALTER TABLE ONLY "public"."topic_key_events"
    ADD CONSTRAINT "topic_key_events_pkey" PRIMARY KEY ("block_number", "log_index");

ALTER TABLE ONLY "public"."topic_key_holders"
    ADD CONSTRAINT "topic_key_holders_pkey" PRIMARY KEY ("topic", "wallet_address");

ALTER TABLE ONLY "public"."topic_keys"
    ADD CONSTRAINT "topic_keys_pkey" PRIMARY KEY ("topic");

ALTER TABLE ONLY "public"."tracked_event_blocks"
    ADD CONSTRAINT "tracked_event_blocks_pkey" PRIMARY KEY ("contract_type");

ALTER TABLE ONLY "public"."user_wallets"
    ADD CONSTRAINT "user_wallets_pkey" PRIMARY KEY ("wallet_address");

ALTER TABLE ONLY "public"."users_public"
    ADD CONSTRAINT "users_public_pkey" PRIMARY KEY ("user_id");

ALTER TABLE ONLY "public"."users_public"
    ADD CONSTRAINT "users_public_wallet_address_key" UNIQUE ("wallet_address");

ALTER TABLE ONLY "public"."wallet_linking_nonces"
    ADD CONSTRAINT "wallet_linking_nonces_pkey" PRIMARY KEY ("user_id");

ALTER TABLE ONLY "public"."creator_chat_messages"
    ADD CONSTRAINT "creator_chat_messages_author_fkey" FOREIGN KEY (author) REFERENCES public.users_public(user_id);

ALTER TABLE ONLY "public"."group_chat_messages"
    ADD CONSTRAINT "group_chat_messages_author_fkey" FOREIGN KEY (author) REFERENCES public.users_public(user_id);

ALTER TABLE ONLY "public"."notifications"
    ADD CONSTRAINT "notifications_triggerer_fkey" FOREIGN KEY (triggerer) REFERENCES public.users_public(user_id);

ALTER TABLE ONLY "public"."notifications"
    ADD CONSTRAINT "notifications_user_id_fkey" FOREIGN KEY (user_id) REFERENCES public.users_public(user_id);

ALTER TABLE ONLY "public"."topic_chat_messages"
    ADD CONSTRAINT "topic_chat_messages_author_fkey" FOREIGN KEY (author) REFERENCES public.users_public(user_id);

ALTER TABLE ONLY "public"."users_public"
    ADD CONSTRAINT "users_public_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id);

ALTER TABLE ONLY "public"."wallet_linking_nonces"
    ADD CONSTRAINT "wallet_linking_nonces_user_id_fkey" FOREIGN KEY (user_id) REFERENCES public.users_public(user_id);

CREATE POLICY "can view only user" ON "public"."notifications" FOR SELECT TO authenticated USING ((user_id = auth.uid()));

CREATE POLICY "can write only authed" ON "public"."creator_chat_messages" FOR INSERT TO authenticated WITH CHECK (((((message IS NOT NULL) AND (message <> ''::text) AND (length(message) <= 1000)) OR ((message IS NULL) AND (rich IS NOT NULL))) AND (author = auth.uid())));

CREATE POLICY "can write only authed" ON "public"."group_chat_messages" FOR INSERT TO authenticated WITH CHECK (((((message IS NOT NULL) AND (message <> ''::text) AND (length(message) <= 1000)) OR ((message IS NULL) AND (rich IS NOT NULL))) AND (author = auth.uid())));

CREATE POLICY "can write only authed" ON "public"."topic_chat_messages" FOR INSERT TO authenticated WITH CHECK (((((message IS NOT NULL) AND (message <> ''::text) AND (length(message) <= 1000)) OR ((message IS NULL) AND (rich IS NOT NULL))) AND (author = auth.uid())));

ALTER TABLE "public"."creator_chat_messages" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."creator_key_activities" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."creator_key_events" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."creator_key_holders" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."creator_keys" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."group_chat_messages" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."group_key_activities" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."group_key_events" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."group_key_holders" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."group_keys" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."notifications" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."topic_chat_messages" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."topic_key_activities" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."topic_key_events" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."topic_key_holders" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."topic_keys" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."tracked_event_blocks" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."user_wallets" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."users_public" ENABLE ROW LEVEL SECURITY;

CREATE POLICY "view everyone" ON "public"."creator_chat_messages" FOR SELECT USING (true);

CREATE POLICY "view everyone" ON "public"."creator_key_events" FOR SELECT USING (true);

CREATE POLICY "view everyone" ON "public"."group_chat_messages" FOR SELECT USING (true);

CREATE POLICY "view everyone" ON "public"."group_key_events" FOR SELECT USING (true);

CREATE POLICY "view everyone" ON "public"."topic_chat_messages" FOR SELECT USING (true);

CREATE POLICY "view everyone" ON "public"."topic_key_events" FOR SELECT USING (true);

CREATE POLICY "view everyone" ON "public"."user_wallets" FOR SELECT USING (true);

CREATE POLICY "view everyone" ON "public"."users_public" FOR SELECT USING (true);

ALTER TABLE "public"."wallet_linking_nonces" ENABLE ROW LEVEL SECURITY;

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."creator_chat_messages" TO "anon";
GRANT ALL ON TABLE "public"."creator_chat_messages" TO "authenticated";
GRANT ALL ON TABLE "public"."creator_chat_messages" TO "service_role";

GRANT ALL ON SEQUENCE "public"."creator_chat_messages_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."creator_chat_messages_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."creator_chat_messages_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."creator_key_activities" TO "anon";
GRANT ALL ON TABLE "public"."creator_key_activities" TO "authenticated";
GRANT ALL ON TABLE "public"."creator_key_activities" TO "service_role";

GRANT ALL ON TABLE "public"."creator_key_events" TO "anon";
GRANT ALL ON TABLE "public"."creator_key_events" TO "authenticated";
GRANT ALL ON TABLE "public"."creator_key_events" TO "service_role";

GRANT ALL ON TABLE "public"."creator_key_holders" TO "anon";
GRANT ALL ON TABLE "public"."creator_key_holders" TO "authenticated";
GRANT ALL ON TABLE "public"."creator_key_holders" TO "service_role";

GRANT ALL ON TABLE "public"."creator_keys" TO "anon";
GRANT ALL ON TABLE "public"."creator_keys" TO "authenticated";
GRANT ALL ON TABLE "public"."creator_keys" TO "service_role";

GRANT ALL ON TABLE "public"."group_chat_messages" TO "anon";
GRANT ALL ON TABLE "public"."group_chat_messages" TO "authenticated";
GRANT ALL ON TABLE "public"."group_chat_messages" TO "service_role";

GRANT ALL ON SEQUENCE "public"."group_chat_messages_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."group_chat_messages_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."group_chat_messages_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."group_key_activities" TO "anon";
GRANT ALL ON TABLE "public"."group_key_activities" TO "authenticated";
GRANT ALL ON TABLE "public"."group_key_activities" TO "service_role";

GRANT ALL ON TABLE "public"."group_key_events" TO "anon";
GRANT ALL ON TABLE "public"."group_key_events" TO "authenticated";
GRANT ALL ON TABLE "public"."group_key_events" TO "service_role";

GRANT ALL ON TABLE "public"."group_key_holders" TO "anon";
GRANT ALL ON TABLE "public"."group_key_holders" TO "authenticated";
GRANT ALL ON TABLE "public"."group_key_holders" TO "service_role";

GRANT ALL ON TABLE "public"."group_keys" TO "anon";
GRANT ALL ON TABLE "public"."group_keys" TO "authenticated";
GRANT ALL ON TABLE "public"."group_keys" TO "service_role";

GRANT ALL ON TABLE "public"."notifications" TO "anon";
GRANT ALL ON TABLE "public"."notifications" TO "authenticated";
GRANT ALL ON TABLE "public"."notifications" TO "service_role";

GRANT ALL ON SEQUENCE "public"."notifications_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."notifications_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."notifications_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."topic_chat_messages" TO "anon";
GRANT ALL ON TABLE "public"."topic_chat_messages" TO "authenticated";
GRANT ALL ON TABLE "public"."topic_chat_messages" TO "service_role";

GRANT ALL ON SEQUENCE "public"."topic_chat_messages_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."topic_chat_messages_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."topic_chat_messages_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."topic_key_activities" TO "anon";
GRANT ALL ON TABLE "public"."topic_key_activities" TO "authenticated";
GRANT ALL ON TABLE "public"."topic_key_activities" TO "service_role";

GRANT ALL ON TABLE "public"."topic_key_events" TO "anon";
GRANT ALL ON TABLE "public"."topic_key_events" TO "authenticated";
GRANT ALL ON TABLE "public"."topic_key_events" TO "service_role";

GRANT ALL ON TABLE "public"."topic_key_holders" TO "anon";
GRANT ALL ON TABLE "public"."topic_key_holders" TO "authenticated";
GRANT ALL ON TABLE "public"."topic_key_holders" TO "service_role";

GRANT ALL ON TABLE "public"."topic_keys" TO "anon";
GRANT ALL ON TABLE "public"."topic_keys" TO "authenticated";
GRANT ALL ON TABLE "public"."topic_keys" TO "service_role";

GRANT ALL ON TABLE "public"."tracked_event_blocks" TO "anon";
GRANT ALL ON TABLE "public"."tracked_event_blocks" TO "authenticated";
GRANT ALL ON TABLE "public"."tracked_event_blocks" TO "service_role";

GRANT ALL ON TABLE "public"."user_wallets" TO "anon";
GRANT ALL ON TABLE "public"."user_wallets" TO "authenticated";
GRANT ALL ON TABLE "public"."user_wallets" TO "service_role";

GRANT ALL ON TABLE "public"."users_public" TO "anon";
GRANT ALL ON TABLE "public"."users_public" TO "authenticated";
GRANT ALL ON TABLE "public"."users_public" TO "service_role";

GRANT ALL ON TABLE "public"."wallet_linking_nonces" TO "anon";
GRANT ALL ON TABLE "public"."wallet_linking_nonces" TO "authenticated";
GRANT ALL ON TABLE "public"."wallet_linking_nonces" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
